version: 2.1

jobs:
  test:
    docker:
      - image: circleci/node:lts-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm ci

      - run: npm test

  build:
    docker:
      - image: circleci/node:lts

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm ci

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm run vscode:prepublish

      - run: npm run package

      - run: cp *.vsix ng-evergreen.vsix

      - store_artifacts:
          path: ng-evergreen.vsix

      - run:
          name: Move compiled app to workspace
          command: |
            set -exu
            mkdir -p /tmp/workspace/vsix
            mv ng-evergreen.vsix /tmp/workspace/vsix/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - vsix

  deploy:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace

      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm ci

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npx vsce publish -p $VSCE_TOKEN

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - hold:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - hold
